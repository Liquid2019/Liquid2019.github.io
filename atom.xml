<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Liquid&#39;s Blog</title>
  
  
  <link href="https://liquid2019.github.io/atom.xml" rel="self"/>
  
  <link href="https://liquid2019.github.io/"/>
  <updated>2021-05-07T05:48:55.299Z</updated>
  <id>https://liquid2019.github.io/</id>
  
  <author>
    <name>Liquid</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>快读快写</title>
    <link href="https://liquid2019.github.io/2021/05/07/11/"/>
    <id>https://liquid2019.github.io/2021/05/07/11/</id>
    <published>2021-05-07T05:47:06.000Z</published>
    <updated>2021-05-07T05:48:55.299Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> X=<span class="number">0</span>,w=<span class="number">0</span>; <span class="keyword">char</span> ch=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123;w|=ch==<span class="string">&#x27;-&#x27;</span>;ch=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) X=(X&lt;&lt;<span class="number">3</span>)+(X&lt;&lt;<span class="number">1</span>)+(ch^<span class="number">48</span>),ch=getchar();</span><br><span class="line">    <span class="keyword">return</span> w?-X:X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>),x=-x;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>) write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
    <category term="acm" scheme="https://liquid2019.github.io/tags/acm/"/>
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>poj1328</title>
    <link href="https://liquid2019.github.io/2021/05/06/10/"/>
    <id>https://liquid2019.github.io/2021/05/06/10/</id>
    <published>2021-05-06T13:01:06.000Z</published>
    <updated>2021-05-06T13:01:43.743Z</updated>
    
    <content type="html"><![CDATA[<p>poj1328</p><p>链接：<a href="http://poj.org/problem?id=1328">http://poj.org/problem?id=1328</a></p><p>先特判所有无解情况：y&gt;d，y&lt;0，d&lt;0</p><p>每个岛可给出一个雷达范围，范围之交可共用雷达，贪心地从左到右放雷达，若新</p><p>范围与旧范围有交就继续用上一个雷达，注意加入新范围时更新右范围（可能更小</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;island;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">double</span>,<span class="keyword">double</span>&gt; &gt;fanwei;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">pair</span>&lt;<span class="keyword">double</span>,<span class="keyword">double</span>&gt;a,<span class="built_in">pair</span>&lt;<span class="keyword">double</span>,<span class="keyword">double</span>&gt;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.first&gt;b.first;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_fanwei</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">abs</span>(y-d)&lt;=<span class="number">1e-6</span>)&#123;</span><br><span class="line">        fanwei.push_back(<span class="built_in">make_pair</span>(x,x));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">double</span> l=<span class="built_in">sqrt</span>(d*d-y*y);</span><br><span class="line">        fanwei.push_back(<span class="built_in">make_pair</span>(x-l,x+l));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> n,d;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;d;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;d==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        island.clear();</span><br><span class="line">        fanwei.clear();</span><br><span class="line">        <span class="keyword">int</span> status=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(d&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            status=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x,y;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class="line">            island.push_back(<span class="built_in">make_pair</span>(x,y));</span><br><span class="line">            <span class="keyword">if</span>(y&lt;<span class="number">0</span>||y&gt;d)&#123;</span><br><span class="line">                status=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(status==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;now&lt;&lt;<span class="string">&quot;: &quot;</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;island.size();i++)&#123;</span><br><span class="line">                get_fanwei(island[i].first,island[i].second,d);</span><br><span class="line">            &#125;</span><br><span class="line">            sort(fanwei.begin(),fanwei.end(),cmp);</span><br><span class="line">            <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>(!fanwei.empty())&#123;</span><br><span class="line">                <span class="built_in">pair</span>&lt;<span class="keyword">double</span>,<span class="keyword">double</span>&gt; now = fanwei.back();</span><br><span class="line">                ans++;</span><br><span class="line">                fanwei.pop_back();</span><br><span class="line">                <span class="keyword">while</span>(!fanwei.empty()&amp;&amp;fanwei.back().first&lt;=now.second)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(fanwei.back().second&lt;now.second)&#123;</span><br><span class="line">                        now=fanwei.back();</span><br><span class="line">                    &#125;</span><br><span class="line">                    fanwei.pop_back();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Case &quot;</span>&lt;&lt;now&lt;&lt;<span class="string">&quot;: &quot;</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        now++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;poj1328&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;http://poj.org/problem?id=1328&quot;&gt;http://poj.org/problem?id=1328&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先特判所有无解情况：y&amp;gt;d，y&amp;lt;0，d&amp;lt;0&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="acm" scheme="https://liquid2019.github.io/tags/acm/"/>
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>poj2965</title>
    <link href="https://liquid2019.github.io/2021/05/03/9/"/>
    <id>https://liquid2019.github.io/2021/05/03/9/</id>
    <published>2021-05-03T07:59:02.000Z</published>
    <updated>2021-05-03T08:02:47.193Z</updated>
    
    <content type="html"><![CDATA[<p>poj2965</p><p>链接：<a href="http://poj.org/problem?id=2965">http://poj.org/problem?id=2965</a></p><p>对着一个博客上的代码改了20多遍总是tle，最后直接把那个博客上的代码交上去也tle了，我傻了</p><p>这个博客的思路：bfs，回溯搜索，位运算，异或运算能快速取反</p><p>我的思路是不用回溯搜索，直接用一个数表示改变过程，不过也是t</p><p>应该是poj把题目优化了不让枚举过了。。</p><p>枚举做法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> method[]=&#123;<span class="number">4383</span>,<span class="number">8751</span>,<span class="number">17487</span>,<span class="number">34959</span>,<span class="number">4593</span>,<span class="number">8946</span>,<span class="number">17652</span>,<span class="number">35064</span>,<span class="number">7953</span>,<span class="number">12066</span>,<span class="number">20292</span>,<span class="number">36744</span>,<span class="number">61713</span>,<span class="number">61986</span>,<span class="number">62532</span>,<span class="number">63624</span>&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;path;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num==(<span class="number">1</span>&lt;&lt;<span class="number">16</span>)<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    q.push(s);</span><br><span class="line">    path[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> now = q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(check(now))&#123;</span><br><span class="line">            <span class="keyword">return</span> path[now];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> nex = method[i]^now;</span><br><span class="line">            <span class="keyword">if</span>(path[now]&amp;(<span class="number">1</span>&lt;&lt;i)||path.find(nex)!=path.end())&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            q.push(nex);</span><br><span class="line">            path[nex]=path[now]+(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">            <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">                now+=(<span class="number">1</span>&lt;&lt;(i*<span class="number">4</span>+j));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans = bfs(now);</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;tmp;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ans&amp;(<span class="number">1</span>&lt;&lt;i))&#123;</span><br><span class="line">            sum++;</span><br><span class="line">            <span class="keyword">int</span> x=i/<span class="number">4</span>;</span><br><span class="line">            <span class="keyword">int</span> y=i<span class="number">-4</span>*x;</span><br><span class="line">            tmp.push(<span class="built_in">make_pair</span>(x,y));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span>(!tmp.empty())&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;tmp.front().first+<span class="number">1</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;tmp.front().second+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        tmp.pop();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>高效解法：</p><p>反着想从最终状态开始，如果有一个+，那个+的行列所有元素各翻一次，需要翻7次，+翻了7次，行列上的元素翻4次不变，其他翻2次不变</p><p>想到所有+都这么翻，最后翻偶数次等于没翻，奇数次翻一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> arr[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">            <span class="keyword">if</span>(ch==<span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;<span class="number">4</span>;k++)&#123;</span><br><span class="line">                    arr[i][k]++;</span><br><span class="line">                    <span class="keyword">if</span>(k==i)&#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    arr[k][j]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i][j]%<span class="number">2</span>)&#123;</span><br><span class="line">                ans++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i][j]%<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;i+<span class="number">1</span>&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;j+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;poj2965&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;http://poj.org/problem?id=2965&quot;&gt;http://poj.org/problem?id=2965&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对着一个博客上的代码改了20多遍总是tle，最后直接把那个博客上的代码交</summary>
      
    
    
    
    
    <category term="acm" scheme="https://liquid2019.github.io/tags/acm/"/>
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>poj1753</title>
    <link href="https://liquid2019.github.io/2021/05/02/8/"/>
    <id>https://liquid2019.github.io/2021/05/02/8/</id>
    <published>2021-05-02T06:47:49.000Z</published>
    <updated>2021-05-03T08:01:14.169Z</updated>
    
    <content type="html"><![CDATA[<p>Poj1753</p><p>链接：<a href="http://poj.org/problem?id=1753">http://poj.org/problem?id=1753</a></p><p>递归地搜</p><p>二维数组不能用www[i]直接指到</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//using ll = long long;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> _map[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">16</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x=i/<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> y=i-x*<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> x2=(i<span class="number">-1</span>)/<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">int</span> y2=i<span class="number">-1</span>-x2*<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">if</span>(_map[x][y]!=_map[x2][y2])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=index/<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> j=index-i*<span class="number">4</span>;</span><br><span class="line">    _map[i][j]=(_map[i][j]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">        _map[i<span class="number">-1</span>][j]=(_map[i<span class="number">-1</span>][j]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j!=<span class="number">0</span>)&#123;</span><br><span class="line">        _map[i][j<span class="number">-1</span>]=(_map[i][j<span class="number">-1</span>]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i!=<span class="number">3</span>)&#123;</span><br><span class="line">        _map[i+<span class="number">1</span>][j]=(_map[i+<span class="number">1</span>][j]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j!=<span class="number">3</span>)&#123;</span><br><span class="line">        _map[i][j+<span class="number">1</span>]=(_map[i][j+<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> last,<span class="keyword">int</span> times)</span></span>&#123;</span><br><span class="line"><span class="comment">//    for(int i=0;i&lt;4;i++)&#123;</span></span><br><span class="line"><span class="comment">//        for(int j=0;j&lt;4;j++)&#123;</span></span><br><span class="line"><span class="comment">//            cout&lt;&lt;_map[i][j]&lt;&lt;&quot; &quot;;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="keyword">if</span>(times==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> check();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=last+<span class="number">1</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(vis[i])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[i]=<span class="number">1</span>;</span><br><span class="line">        change(i);</span><br><span class="line">        <span class="keyword">if</span>(dfs(i,times<span class="number">-1</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        vis[i]=<span class="number">0</span>;</span><br><span class="line">        change(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">            <span class="keyword">if</span>(ch==<span class="string">&#x27;b&#x27;</span>)&#123;</span><br><span class="line">                _map[i][j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                _map[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> times = <span class="number">0</span>;times&lt;=<span class="number">16</span>;times++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dfs(<span class="number">-1</span>,times))&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;times&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Impossible&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>位运算</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"></span><br><span class="line">ll _map[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">ll model[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(ll index)</span></span>&#123;</span><br><span class="line">    ll i=index/<span class="number">4</span>;</span><br><span class="line">    ll j=index-i*<span class="number">4</span>;</span><br><span class="line">    _map[i][j]=(_map[i][j]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">        _map[i<span class="number">-1</span>][j]=(_map[i<span class="number">-1</span>][j]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j!=<span class="number">0</span>)&#123;</span><br><span class="line">        _map[i][j<span class="number">-1</span>]=(_map[i][j<span class="number">-1</span>]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(i!=<span class="number">3</span>)&#123;</span><br><span class="line">        _map[i+<span class="number">1</span>][j]=(_map[i+<span class="number">1</span>][j]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(j!=<span class="number">3</span>)&#123;</span><br><span class="line">        _map[i][j+<span class="number">1</span>]=(_map[i][j+<span class="number">1</span>]+<span class="number">1</span>)%<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">        ll x=i/<span class="number">4</span>;</span><br><span class="line">        ll y=i-x*<span class="number">4</span>;</span><br><span class="line">        ll x2=(i<span class="number">-1</span>)/<span class="number">4</span>;</span><br><span class="line">        ll y2=i<span class="number">-1</span>-x2*<span class="number">4</span>;</span><br><span class="line">        <span class="keyword">if</span>(_map[x][y]!=_map[x2][y2])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(ll j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            _map[i][j]=model[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(ll num)</span></span>&#123;</span><br><span class="line">    ll sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(num&amp;(<span class="number">1</span>&lt;&lt;i))&#123;</span><br><span class="line">            sum++;</span><br><span class="line">            change(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll status=check();</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">if</span>(status)&#123;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(ll j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">            <span class="keyword">if</span>(ch==<span class="string">&#x27;b&#x27;</span>)&#123;</span><br><span class="line">                _map[i][j]=<span class="number">1</span>;</span><br><span class="line">                model[i][j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                _map[i][j]=<span class="number">0</span>;</span><br><span class="line">                model[i][j]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="number">17</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;(<span class="number">1</span>&lt;&lt;<span class="number">16</span>);i++)&#123;</span><br><span class="line">        ll tmp=solve(i);</span><br><span class="line">        <span class="keyword">if</span>(tmp==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans=min(ans,tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans==<span class="number">17</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Impossible&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>广搜，位运算</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;bits/stdc++.h&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utility&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;path;</span><br><span class="line"><span class="keyword">int</span> FIN1=<span class="number">65535</span>;</span><br><span class="line"><span class="keyword">int</span> FIN2=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_change</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=index/<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> y=index%<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(x!=<span class="number">0</span>)&#123;</span><br><span class="line">        num|=(<span class="number">1</span>&lt;&lt;((x<span class="number">-1</span>)*<span class="number">4</span>+y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x!=<span class="number">3</span>)&#123;</span><br><span class="line">        num|=(<span class="number">1</span>&lt;&lt;((x+<span class="number">1</span>)*<span class="number">4</span>+y));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(y!=<span class="number">0</span>)&#123;</span><br><span class="line">        num|=(<span class="number">1</span>&lt;&lt;((x*<span class="number">4</span>)+y<span class="number">-1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(y!=<span class="number">3</span>)&#123;</span><br><span class="line">        num|=(<span class="number">1</span>&lt;&lt;((x*<span class="number">4</span>)+y+<span class="number">1</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    num|=(<span class="number">1</span>&lt;&lt;(x*<span class="number">4</span>+y));</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line">    q.push(s);</span><br><span class="line">    path[s]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> now=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">if</span>(now==FIN1||now==FIN2)&#123;</span><br><span class="line">            <span class="keyword">return</span> path[now];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> change=get_change(i);</span><br><span class="line">            <span class="keyword">int</span> nex=change^now;</span><br><span class="line">            <span class="keyword">if</span>(path[now]&amp;(<span class="number">1</span>&lt;&lt;i)||path.find(nex)!=path.end())&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            q.push(nex);</span><br><span class="line">            path[nex]=path[now]|(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> now=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">4</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">char</span> ch;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">            <span class="keyword">if</span>(ch==<span class="string">&#x27;b&#x27;</span>)&#123;</span><br><span class="line">                now|=(<span class="number">1</span>&lt;&lt;(i*<span class="number">4</span>+j));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ans=bfs(now);</span><br><span class="line">    <span class="keyword">if</span>(ans==<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;Impossible&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(ans&amp;(<span class="number">1</span>&lt;&lt;i))&#123;</span><br><span class="line">                sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;sum&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Poj1753&lt;/p&gt;
&lt;p&gt;链接：&lt;a href=&quot;http://poj.org/problem?id=1753&quot;&gt;http://poj.org/problem?id=1753&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;递归地搜&lt;/p&gt;
&lt;p&gt;二维数组不能用www[i]直接指到&lt;/p&gt;
&lt;f</summary>
      
    
    
    
    
    <category term="acm" scheme="https://liquid2019.github.io/tags/acm/"/>
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>转载的题单</title>
    <link href="https://liquid2019.github.io/2021/04/30/7/"/>
    <id>https://liquid2019.github.io/2021/04/30/7/</id>
    <published>2021-04-30T05:04:42.000Z</published>
    <updated>2021-05-02T06:53:37.865Z</updated>
    
    <content type="html"><![CDATA[<p>转载自<a href="https://blog.csdn.net/a1dark/article/details/11714009">https://blog.csdn.net/a1dark/article/details/11714009</a></p><p><a href="http://poj.org/">http://poj.org/</a></p><p>OJ上的一些水题(可用来练手和增加自信)<br>(poj3299,poj2159,poj2739,poj1083,poj2262,poj1503,poj3006,poj2255,poj3094)<br>初期:</p><p>一.基本算法:<br>   (1)枚举. (poj1753,poj2965)<br>   (2)贪心(poj1328,poj2109,poj2586)<br>   (3)递归和分治法.<br>   (4)递推.<br>   (5)构造法.(poj3295)<br>   (6)模拟法.(poj1068,poj2632,poj1573,poj2993,poj2996)<br>二.图算法:<br>   (1)图的深度优先遍历和广度优先遍历.<br>   (2)最短路径算法(dijkstra,bellman-ford,floyd,heap+dijkstra)<br>    (poj1860,poj3259,poj1062,poj2253,poj1125,poj2240)<br>   (3)最小生成树算法(prim,kruskal)<br>    (poj1789,poj2485,poj1258,poj3026)<br>   (4)拓扑排序 (poj1094)<br>   (5)二分图的最大匹配 (匈牙利算法) (poj3041,poj3020)<br>   (6)最大流的增广路算法(KM算法). (poj1459,poj3436)<br>三.数据结构.<br>   (1)串 (poj1035,poj3080,poj1936)<br>   (2)排序(快排、归并排(与逆序数有关)、堆排) (poj2388,poj2299)<br>   (3)简单并查集的应用.<br>   (4)哈希表和二分查找等高效查找法(数的Hash,串的Hash)<br>    (poj3349,poj3274,POJ2151,poj1840,poj2002,poj2503)<br>   (5)哈夫曼树(poj3253)<br>   (6)堆<br>   (7)trie树(静态建树、动态建树) (poj2513)<br>四.简单搜索<br>   (1)深度优先搜索 (poj2488,poj3083,poj3009,poj1321,poj2251)<br>   (2)广度优先搜索(poj3278,poj1426,poj3126,poj3087.poj3414)<br>   (3)简单搜索技巧和剪枝(poj2531,poj1416,poj2676,1129)<br>五.动态规划<br>   (1)背包问题. (poj1837,poj1276)<br>   (2)型如下表的简单DP(可参考lrj的书 page149):<br>    1.E[j]=opt{D+w(i,j)} (poj3267,poj1836,poj1260,poj2533)<br>    2.E[i,j]=opt{D[i-1,j]+xi,D[i,j-1]+yj,D[i-1][j-1]+zij} (最长公共子序列) </p><pre><code> (poj3176,poj1080,poj1159) 3.C[i,j]=w[i,j]+opt&#123;C[i,k-1]+C[k,j]&#125;.(最优二分检索树问题) </code></pre><p>六.数学<br>   (1)组合数学:<br>    1.加法原理和乘法原理.<br>    2.排列组合.<br>    3.递推关系.<br>     (POJ3252,poj1850,poj1019,poj1942)<br>   (2)数论.<br>    1.素数与整除问题<br>    2.进制位.<br>    3.同余模运算.<br>     (poj2635, poj3292,poj1845,poj2115)<br>   (3)计算方法.<br>    1.二分法求解单调函数相关知识.(poj3273,poj3258,poj1905,poj3122)<br>七.计算几何学.<br>   (1)几何公式.<br>   (2)叉积和点积的运用(如线段相交的判定,点到线段的距离等). (poj2031,poj1039)</p><p>   (3)多边型的简单算法(求面积)和相关判定(点在多边型内,多边型是否相交)<br>     (poj1408,poj1584)<br>   (4)凸包. (poj2187,poj1113)<br>中级:</p><p>一.基本算法:<br>   (1)C++的标准模版库的应用. (poj3096,poj3007)<br>   (2)较为复杂的模拟题的训练(poj3393,poj1472,poj3371,poj1027,poj2706)<br>二.图算法:<br>   (1)差分约束系统的建立和求解. (poj1201,poj2983)<br>   (2)最小费用最大流(poj2516,poj2195)<br>   (3)双连通分量(poj2942)<br>   (4)强连通分支及其缩点.(poj2186)<br>   (5)图的割边和割点(poj3352)<br>   (6)最小割模型、网络流规约(poj3308, )<br>三.数据结构.<br>   (1)线段树. (poj2528,poj2828,poj2777,poj2886,poj2750)<br>   (2)静态二叉检索树. (poj2482,poj2352)<br>   (3)树状树组(poj1195,poj3321)<br>   (4)RMQ. (poj3264,poj3368)<br>   (5)并查集的高级应用. (poj1703,2492)<br>   (6)KMP算法. (poj1961,poj2406)<br>四.搜索<br>   (1)最优化剪枝和可行性剪枝<br>   (2)搜索的技巧和优化 (poj3411,poj1724)<br>   (3)记忆化搜索(poj3373,poj1691)<br>五.动态规划<br>   (1)较为复杂的动态规划(如动态规划解特别的施行商问题等)<br>     (poj1191,poj1054,poj3280,poj2029,poj2948,poj1925,poj3034)<br>   (2)记录状态的动态规划. (POJ3254,poj2411,poj1185)<br>   (3)树型动态规划(poj2057,poj1947,poj2486,poj3140)<br>六.数学<br>   (1)组合数学:<br>    1.容斥原理.<br>    2.抽屉原理.<br>    3.置换群与Polya定理(poj1286,poj2409,poj3270,poj1026).<br>    4.递推关系和母函数.<br>   (2)数学.<br>    1.高斯消元法(poj2947,poj1487, poj2065,poj1166,poj1222)<br>    2.概率问题. (poj3071,poj3440)<br>    3.GCD、扩展的欧几里德(中国剩余定理) (poj3101)<br>   (3)计算方法.<br>    1.0/1分数规划. (poj2976)<br>    2.三分法求解单峰(单谷)的极值.<br>    3.矩阵法(poj3150,poj3422,poj3070)<br>    4.迭代逼近(poj3301)<br>   (4)随机化算法(poj3318,poj2454)<br>   (5)杂题.<br>     (poj1870,poj3296,poj3286,poj1095)<br>七.计算几何学.<br>    (1)坐标离散化.<br>    (2)扫描线算法(例如求矩形的面积和周长并,常和线段树或堆一起使用).<br>      (poj1765,poj1177,poj1151,poj3277,poj2280,poj3004)<br>    (3)多边形的内核(半平面交)(poj3130,poj3335)<br>    (4)几何工具的综合应用.(poj1819,poj1066,poj2043,poj3227,poj2165,poj3429<br>)</p><p>高级:<br>一.基本算法要求:<br>   (1)代码快速写成,精简但不失风格<br>     (poj2525,poj1684,poj1421,poj1048,poj2050,poj3306)<br>   (2)保证正确性和高效性. poj3434<br>二.图算法:<br>   (1)度限制最小生成树和第K最短路. (poj1639)<br>   (2)最短路,最小生成树,二分图,最大流问题的相关理论(主要是模型建立和求解)</p><p>​     (poj3155, poj2112,poj1966,poj3281,poj1087,poj2289,poj3216,poj2446<br>   (3)最优比率生成树. (poj2728)<br>   (4)最小树形图(poj3164)<br>   (5)次小生成树.<br>   (6)无向图、有向图的最小环<br>三.数据结构.<br>   (1)trie图的建立和应用. (poj2778)<br>   (2)LCA和RMQ问题(LCA(最近公共祖先问题) 有离线算法(并查集+dfs) 和 在线算法<br>​     (RMQ+dfs)).(poj1330)<br>   (3)双端队列和它的应用(维护一个单调的队列,常常在动态规划中起到优化状态转移<br>的<br>​     目的). (poj2823)<br>   (4)左偏树(可合并堆).<br>   (5)后缀树(非常有用的数据结构,也是赛区考题的热点).<br>​     (poj3415,poj3294)<br>四.搜索<br>   (1)较麻烦的搜索题目训练(poj1069,poj3322,poj1475,poj1924,poj2049,poj3426)</p><p>   (2)广搜的状态优化:利用M进制数存储状态、转化为串用hash表判重、按位压缩存储<br>状态、双向广搜、A<em>算法. (poj1768,poj1184,poj1872,poj1324,poj2046,poj1482)<br>   (3)深搜的优化:尽量用位运算、一定要加剪枝、函数参数尽可能少、层数不易过大<br>、可以考虑双向搜索或者是轮换搜索、IDA</em>算法. (poj3131,poj2870,poj2286)<br>五.动态规划<br>   (1)需要用数据结构优化的动态规划.<br>     (poj2754,poj3378,poj3017)<br>   (2)四边形不等式理论.<br>   (3)较难的状态DP(poj3133)<br>六.数学<br>   (1)组合数学.<br>    1.MoBius反演(poj2888,poj2154)<br>    2.偏序关系理论.<br>   (2)博奕论.<br>    1.极大极小过程(poj3317,poj1085)<br>    2.Nim问题.<br>七.计算几何学.<br>   (1)半平面求交(poj3384,poj2540)<br>   (2)可视图的建立(poj2966)<br>   (3)点集最小圆覆盖.<br>   (4)对踵点(poj2079)<br>   八.综合题.<br>   (poj3109,poj1478,poj1462,poj2729,poj2048,poj3336,poj3315,poj2148,poj1263<br>)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载自&lt;a href=&quot;https://blog.csdn.net/a1dark/article/details/11714009&quot;&gt;https://blog.csdn.net/a1dark/article/details/11714009&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a hr</summary>
      
    
    
    
    
    <category term="acm" scheme="https://liquid2019.github.io/tags/acm/"/>
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 705 (Div. 2)</title>
    <link href="https://liquid2019.github.io/2021/03/11/6/"/>
    <id>https://liquid2019.github.io/2021/03/11/6/</id>
    <published>2021-03-11T10:34:22.000Z</published>
    <updated>2021-03-11T10:43:49.294Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="https://codeforces.com/contest/1493">https://codeforces.com/contest/1493</a></p><p>这一场只过了a题</p><p>以后注意先想想暴力解法再优化的思路</p><h2 id="A-Anti-knapsack"><a href="#A-Anti-knapsack" class="headerlink" title="A. Anti-knapsack"></a>A. Anti-knapsack</h2><p>题意：给n和k，从1到n的数中选出尽可能大的数，这些数的任何子集之和不能等于k</p><p>解：这些数就是[k+1,n]和[(k+1)/2,k-1]</p><h2 id="B-Planet-Lapituletti"><a href="#B-Planet-Lapituletti" class="headerlink" title="B. Planet Lapituletti"></a>B. Planet Lapituletti</h2><p>题意:给出小时进制和分钟进制和起始时间，求最近的在镜子里也合法的时间</p><p>解:直接从起始时间遍历就行，当时想了奇怪操作还错了，下次注意可以先想个暴力再优化。若当时的一天过完了，答案直接就是00:00</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Table[]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">8</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_ok</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> q=a/<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> w=a%<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span>(Table[q]==<span class="number">-1</span>||Table[w]==<span class="number">-1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(Table[w]*<span class="number">10</span>+Table[q]&gt;=k)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h,m;</span><br><span class="line">    <span class="built_in">string</span> tmp;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;h&gt;&gt;m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>*(tmp[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>)+tmp[<span class="number">1</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">10</span>*(tmp[<span class="number">3</span>]-<span class="string">&#x27;0&#x27;</span>)+tmp[<span class="number">4</span>]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a&gt;=h)&#123;</span><br><span class="line">            a-=h;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(b&gt;=m)&#123;</span><br><span class="line">            b-=m;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(is_ok(m,a)&amp;&amp;is_ok(h,b))&#123;</span><br><span class="line">            <span class="keyword">if</span>(a/<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;a&lt;&lt;<span class="string">&quot;:&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(b/<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;0&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        b++;</span><br><span class="line">        <span class="keyword">if</span>(b&gt;=m)&#123;</span><br><span class="line">            b=<span class="number">0</span>;</span><br><span class="line">            a++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C-K-beautiful-Strings"><a href="#C-K-beautiful-Strings" class="headerlink" title="C. K-beautiful Strings"></a>C. K-beautiful Strings</h2><p>题意：给出一个字符串和k，求一个字典序最小的字符串，要求和这个字符串等长且字典序大于等于原字符串，且字符串的每个字母数目都可被k整除</p><p>解：因为要找大于原字符串的最小字符串，所以倒着处理，对于i点，前i-1都不动，定义一个sum存目前确定的字符还需改几次，如果sum比剩下可变动的点多，这个点就不可取，遍历比i点字符大的所有字符判断sum，若可取，就先输出确定的，然后剩下的点不算在sum里的全部输出a，然后输出算在sum里的。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_con</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (k-x%k)%k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="keyword">if</span>(n%k)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;cnt(<span class="number">27</span>);</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cnt[s[i]-<span class="string">&#x27;a&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">        sum+=get_con(cnt[i],k);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        sum=sum-get_con(cnt[s[i]-<span class="string">&#x27;a&#x27;</span>],k)+get_con(--cnt[s[i]-<span class="string">&#x27;a&#x27;</span>],k);</span><br><span class="line">        <span class="keyword">if</span>(sum&gt;n-i)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=s[i]-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;j&lt;<span class="number">26</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> tmp=sum;</span><br><span class="line">            tmp=tmp-get_con(cnt[j],k)+get_con(cnt[j]+<span class="number">1</span>,k);</span><br><span class="line">            <span class="keyword">if</span>(tmp&gt;n-i<span class="number">-1</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt[j]++;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">0</span>;q&lt;i;q++)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;s[q];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="keyword">char</span>(<span class="string">&#x27;a&#x27;</span>+j);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">1</span>;q&lt;=n-i-tmp<span class="number">-1</span>;q++)&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">0</span>;q&lt;<span class="number">26</span>;q++)&#123;</span><br><span class="line">                <span class="keyword">int</span> w=get_con(cnt[q],k);</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> e=<span class="number">1</span>;e&lt;=w;e++)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="keyword">char</span>(<span class="string">&#x27;a&#x27;</span>+q);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="D-GCD-of-an-Array"><a href="#D-GCD-of-an-Array" class="headerlink" title="D. GCD of an Array"></a>D. GCD of an Array</h2><p>题意：给一个数组，每步操作给第i个点乘一个数，算乘后的数组gcd</p><p>解：思路是算出每个位置对gcd的贡献，可以通过最小质因数来计算</p><p>用map存每个位置上对应因数的个数</p><p>用一个multiset存对应因数的位置的个数，若一个因数有n个位置的个数，就取其中最小的有对gcd的贡献。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt;s[maxn];</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;m[maxn];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(x&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> div=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x%i==<span class="number">0</span>)&#123;</span><br><span class="line">                div=i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(div==<span class="number">0</span>)&#123;</span><br><span class="line">            div=x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x%div==<span class="number">0</span>)&#123;</span><br><span class="line">            num++;</span><br><span class="line">            x/=div;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> last=m[p][div];</span><br><span class="line">        <span class="keyword">int</span> last2=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[div].size()==n)&#123;</span><br><span class="line">            last2=*s[div].begin();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(last!=<span class="number">0</span>)&#123;</span><br><span class="line">            s[div].erase(s[div].find(last));</span><br><span class="line">        &#125;</span><br><span class="line">        s[div].insert(last+num);</span><br><span class="line">        m[p][div]=last+num;</span><br><span class="line">        <span class="keyword">if</span>(s[div].size()==n)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=last2+<span class="number">1</span>;j&lt;=*s[div].begin();j++)&#123;</span><br><span class="line">                ans=ans*div%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> q;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;tmp;</span><br><span class="line">        Add(i,tmp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> p,x;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p&gt;&gt;x;</span><br><span class="line">        Add(p,x);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>E,F待补</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;链接：&lt;a href=&quot;https://codeforces.com/contest/1493&quot;&gt;https://codeforces.com/contest/1493&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这一场只过了a题&lt;/p&gt;
&lt;p&gt;以后注意先想想暴力解法再优化的思路&lt;/p&gt;
&lt;h2</summary>
      
    
    
    
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>用map做二维数组</title>
    <link href="https://liquid2019.github.io/2021/03/07/5/"/>
    <id>https://liquid2019.github.io/2021/03/07/5/</id>
    <published>2021-03-07T13:47:54.000Z</published>
    <updated>2021-03-07T13:51:37.383Z</updated>
    
    <content type="html"><![CDATA[<p>用map做二维数组可以少用点空间==</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;Map[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">3</span>;j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;Map[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用map做二维数组可以少用点空间==&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>Educational Codeforces Round 105 (Rated for Div. 2)</title>
    <link href="https://liquid2019.github.io/2021/03/07/4/"/>
    <id>https://liquid2019.github.io/2021/03/07/4/</id>
    <published>2021-03-07T13:47:35.000Z</published>
    <updated>2021-03-11T10:52:58.360Z</updated>
    
    <content type="html"><![CDATA[<p>博客写的第一场cf</p><p>比赛只写了A，B想的思路错了wa了几发，又是掉分的一场==</p><h2 id="A-ABC-String"><a href="#A-ABC-String" class="headerlink" title="A. ABC String"></a>A. ABC String</h2><p>题意:给包含ABC字母的字符串，每个字母代表一种括号，问能否组成合法括号</p><p>解:1.个数最多的那个字符必须等于另两个只和</p><p>​    2.若(=1，)=-1，前缀和必须&gt;=0</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll=<span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;a,<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.second&gt;=b.second;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;a;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;num(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</span><br><span class="line">        a.push_back(s[i]-<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">        num[s[i]-<span class="string">&#x27;A&#x27;</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a.front()==a.back())&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;b(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        b[i]=<span class="built_in">make_pair</span>(i,num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(b.begin(),b.end(),cmp);</span><br><span class="line">    <span class="keyword">if</span>(b[<span class="number">0</span>].second!=b[<span class="number">1</span>].second+b[<span class="number">2</span>].second)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;color(<span class="number">3</span>);</span><br><span class="line">    color[a.front()]=<span class="number">1</span>;</span><br><span class="line">    color[a.back()]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">if</span>(color[b[<span class="number">1</span>].first]==<span class="number">0</span>)&#123;</span><br><span class="line">        color[b[<span class="number">1</span>].first]=color[b[<span class="number">2</span>].first];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        color[b[<span class="number">2</span>].first]=color[b[<span class="number">1</span>].first];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.size();i++)&#123;</span><br><span class="line">        sum+=color[a[i]];</span><br><span class="line">        <span class="keyword">if</span>(sum&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sum!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="B-Berland-Crossword"><a href="#B-Berland-Crossword" class="headerlink" title="B. Berland Crossword"></a>B. Berland Crossword</h2><p>题意:n行正方形矩阵，U,R,D,L分别为上右下左被涂黑的个数，问是否存在这么一种涂法</p><p>解:顶角会影响到两边，只有4个角可以枚举，用二进制枚举</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll=<span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,u,r,d,l;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;u&gt;&gt;r&gt;&gt;d&gt;&gt;l;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">15</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> uu=u;</span><br><span class="line">        <span class="keyword">int</span> rr=r;</span><br><span class="line">        <span class="keyword">int</span> dd=d;</span><br><span class="line">        <span class="keyword">int</span> ll=l;</span><br><span class="line">        <span class="keyword">if</span>(i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            uu--;</span><br><span class="line">            ll--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&amp;<span class="number">2</span>)&#123;</span><br><span class="line">            uu--;</span><br><span class="line">            rr--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&amp;<span class="number">4</span>)&#123;</span><br><span class="line">            rr--;</span><br><span class="line">            dd--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i&amp;<span class="number">8</span>)&#123;</span><br><span class="line">            dd--;</span><br><span class="line">            ll--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(uu&gt;=<span class="number">0</span>&amp;&amp;rr&gt;=<span class="number">0</span>&amp;&amp;dd&gt;=<span class="number">0</span>&amp;&amp;ll&gt;=<span class="number">0</span>&amp;&amp;uu&lt;=n<span class="number">-2</span>&amp;&amp;rr&lt;=n<span class="number">-2</span>&amp;&amp;dd&lt;=n<span class="number">-2</span>&amp;&amp;ll&lt;=n<span class="number">-2</span>)&#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C-1D-Sokoban"><a href="#C-1D-Sokoban" class="headerlink" title="C. 1D Sokoban"></a>C. 1D Sokoban</h2><p>题意:人在0点，数轴上有箱子，有得分点，问人能把箱子推到得分点上的最大个数</p><p>解:1.0点左右是对称的</p><p>​    2.第一个箱子在特殊点上时最优</p><p>​    那么枚举第一箱子在每个特殊点时的得分取最大</p><p>​    得分计算分两类，第一类推到的箱子压到的，第二类没推到本来就在得分点上的，需预处理</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll=<span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">real_solve</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;ll&gt;&amp;a,<span class="keyword">const</span> <span class="built_in">vector</span>&lt;ll&gt;&amp;b)</span></span>&#123;</span><br><span class="line">    ll n=a.size();</span><br><span class="line">    ll m=b.size();</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt;su(n+<span class="number">1</span>);</span><br><span class="line">    ll l=m<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        su[i]=su[i+<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">while</span>(l&gt;=<span class="number">0</span>&amp;&amp;a[i]&lt;b[l])&#123;</span><br><span class="line">            l--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(l&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==b[l])&#123;</span><br><span class="line">            su[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    l=<span class="number">0</span>;</span><br><span class="line">    ll r=<span class="number">0</span>;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;n&amp;&amp;a[l]&lt;=b[i]+l)&#123;</span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(r&lt;m&amp;&amp;b[r]-b[i]&lt;l)&#123;</span><br><span class="line">            r++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans=max(ans,r-i+su[l]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll n,m;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt;a(n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt;b(m);</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt;a1;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt;a2;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt;b1;</span><br><span class="line">    <span class="built_in">vector</span>&lt;ll&gt;b2;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            a1.push_back(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            a2.push_back(-a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            b1.push_back(b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            b2.push_back(-b[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(a2.begin(),a2.end());</span><br><span class="line">    reverse(b2.begin(),b2.end());</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;real_solve(a1,b1)+real_solve(a2,b2)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ll t;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="D-Dogeforces"><a href="#D-Dogeforces" class="headerlink" title="D. Dogeforces"></a>D. Dogeforces</h2><p>题意:已知树上父节点比他的所有子节点权值大，给一颗树的所有叶子结点的lca的权值，求点个数，每个点权值，整个数的父节点，每个点的父结点，说白的就是建树</p><p>解:我太菜了总感觉这题有点玄学，评测机可能是根据我输出的数据建树了？</p><p>把所有权值根据从小到大排序，这样就能从下到上建树</p><p>先找到最大的权值maxx，这个点定为n+1</p><p>若两个点lca是maxx那就是n+1这个点</p><p>否则如果两个点中有点的祖先权值等于maxx也不用加新点，就是这个祖先</p><p>如果两个点祖先一样也不用加直接continue</p><p>不然就要加一个新点进行合并操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll=<span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> fa[maxn*maxn];</span><br><span class="line"><span class="built_in">priority_queue</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt; &gt;q;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;edge;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[x]==x)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fa[x]=find(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    x = find(x), y = find(y);</span><br><span class="line">    <span class="keyword">if</span>(x!=y) fa[x] = y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;ans(n*n);</span><br><span class="line">    <span class="keyword">int</span> mmax=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        fa[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;a[i][j];</span><br><span class="line">            mmax=max(mmax,a[i][j]);</span><br><span class="line">            <span class="keyword">if</span>(i==j)&#123;</span><br><span class="line">                ans[i]=a[i][j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i&lt;j)&#123;</span><br><span class="line">                q.push(<span class="built_in">make_pair</span>(-a[i][j],<span class="built_in">make_pair</span>(i,j)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k=n+<span class="number">1</span>;</span><br><span class="line">    ans[n+<span class="number">1</span>]=mmax;</span><br><span class="line">    <span class="keyword">while</span>(!q.empty())&#123;</span><br><span class="line">        <span class="keyword">auto</span> now=q.top();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="keyword">int</span> sal=-now.first;</span><br><span class="line">        <span class="keyword">int</span> x=now.second.first;</span><br><span class="line">        <span class="keyword">int</span> y=now.second.second;</span><br><span class="line">        <span class="keyword">int</span> fa_x=find(x);</span><br><span class="line">        <span class="keyword">int</span> fa_y=find(y);</span><br><span class="line">        <span class="keyword">if</span>(fa_x==fa_y)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sal==mmax)&#123;</span><br><span class="line">            <span class="keyword">if</span>(fa_x!=n+<span class="number">1</span>)&#123;</span><br><span class="line">                edge.push_back(<span class="built_in">make_pair</span>(fa_x,n+<span class="number">1</span>));</span><br><span class="line">                merge(fa_x,n+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(fa_y!=n+<span class="number">1</span>)&#123;</span><br><span class="line">                edge.push_back(<span class="built_in">make_pair</span>(fa_y,n+<span class="number">1</span>));</span><br><span class="line">                merge(fa_y,n+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sal==ans[fa_x])&#123;</span><br><span class="line">            edge.push_back(<span class="built_in">make_pair</span>(fa_y,fa_x));</span><br><span class="line">            merge(fa_y,fa_x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sal==ans[fa_y])&#123;</span><br><span class="line">            edge.push_back(<span class="built_in">make_pair</span>(fa_x,fa_y));</span><br><span class="line">            merge(fa_x,fa_y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            k++;</span><br><span class="line">            edge.push_back(<span class="built_in">make_pair</span>(fa_x,k));</span><br><span class="line">            merge(fa_x,k);</span><br><span class="line">            edge.push_back(<span class="built_in">make_pair</span>(fa_y,k));</span><br><span class="line">            merge(fa_y,k);</span><br><span class="line">            ans[k]=sal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;k&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;edge.size();i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;edge[i].first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;edge[i].second&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>另外editorial里的递归解法没看懂，这里cy以后补上</p><h2 id="E-A-Z-Graph"><a href="#E-A-Z-Graph" class="headerlink" title="E. A-Z Graph"></a>E. A-Z Graph</h2><p>题意:给n个点，给u到v加条单向边编号是a或b或c。。也可以删边</p><p>？k表示问是否存在边长为k同时起点到终点，终点到起点的边编号相同</p><p>解：当k为偶数时，构造u-&gt;v-&gt;u只要有两个点之间有两条边就行</p><p>当k为奇数时，可证有两个点之间有两条边且编号相同</p><p>那么在建图时记录下这两种边数量即可</p><p>须预处理不然会t</p><p>另外用二维数组会超空间</p><p>用map好</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> ll = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;Map[maxn];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">int</span> cnt1=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">char</span> ch;</span><br><span class="line">        <span class="keyword">int</span> u,v;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;ch;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v&gt;&gt;ch;</span><br><span class="line">            Map[u][v]=ch-<span class="string">&#x27;a&#x27;</span>+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(Map[v][u])&#123;</span><br><span class="line">                cnt1++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Map[v][u]==Map[u][v])&#123;</span><br><span class="line">                cnt2++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;u&gt;&gt;v;</span><br><span class="line">            <span class="keyword">if</span>(Map[u][v]==Map[v][u])&#123;</span><br><span class="line">                cnt2--;</span><br><span class="line">            &#125;</span><br><span class="line">            Map[u][v]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(Map[v][u])&#123;</span><br><span class="line">                cnt1--;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;u;</span><br><span class="line">            <span class="keyword">if</span>(u%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt2)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt1)&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;YES&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;NO&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    solve();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>F:待补</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;博客写的第一场cf&lt;/p&gt;
&lt;p&gt;比赛只写了A，B想的思路错了wa了几发，又是掉分的一场==&lt;/p&gt;
&lt;h2 id=&quot;A-ABC-String&quot;&gt;&lt;a href=&quot;#A-ABC-String&quot; class=&quot;headerlink&quot; title=&quot;A. ABC String&quot;</summary>
      
    
    
    
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>pair和sort和cmp的用法</title>
    <link href="https://liquid2019.github.io/2021/03/01/3/"/>
    <id>https://liquid2019.github.io/2021/03/01/3/</id>
    <published>2021-03-01T09:49:04.000Z</published>
    <updated>2021-03-01T09:56:28.308Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;a,<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.first&gt;=b.first; <span class="comment">//这里return的是a是否在前面</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">pair</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; &gt;test(n+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;test[i].first&gt;&gt;test[i].second;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(test.begin(),test.end(),cmp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cmp函数返回的是第一个传入变量是否在前</p><p>sort排序从（test.begin()）到（test.end()的前一个）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
    <category term="cf" scheme="https://liquid2019.github.io/tags/cf/"/>
    
  </entry>
  
  <entry>
    <title>hexo常用指令</title>
    <link href="https://liquid2019.github.io/2021/03/01/2/"/>
    <id>https://liquid2019.github.io/2021/03/01/2/</id>
    <published>2021-03-01T07:50:40.000Z</published>
    <updated>2021-03-11T11:02:31.602Z</updated>
    
    <content type="html"><![CDATA[<p>hexo new 1    生成新文章1.md</p><p>hexo s    部署本地</p><p>hexo clean    清除缓存</p><p>hexo d    部署服务器</p><p>(如果hexo d推不动，hexo clean 再推，还推不动就再来一次</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;hexo new 1    生成新文章1.md&lt;/p&gt;
&lt;p&gt;hexo s    部署本地&lt;/p&gt;
&lt;p&gt;hexo clean    清除缓存&lt;/p&gt;
&lt;p&gt;hexo d    部署服务器&lt;/p&gt;
&lt;p&gt;(如果hexo d推不动，hexo clean 再推，还推不动就再来一</summary>
      
    
    
    
    
    <category term="==" scheme="https://liquid2019.github.io/tags/"/>
    
  </entry>
  
  <entry>
    <title>masm for mac</title>
    <link href="https://liquid2019.github.io/2020/12/19/1/"/>
    <id>https://liquid2019.github.io/2020/12/19/1/</id>
    <published>2020-12-19T05:56:42.000Z</published>
    <updated>2021-03-01T07:58:55.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p><a href="https://github.com/Liquid2019/something">masm5和dosbox</a></p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>以masm5文件夹放在桌面上为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount c ~&#x2F;Desktop&#x2F;masm5</span><br><span class="line">c:</span><br></pre></td></tr></table></figure><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h1><p>将代码写在txt上，变成.asm格式放在masm5里</p><p>以1.asm为例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">masm 1.asm</span><br><span class="line">link 1.obj</span><br><span class="line">1.exe</span><br></pre></td></tr></table></figure><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">debug 1.exe</span><br><span class="line">-u命令：查看汇编代码； </span><br><span class="line">-t命令：执行下一条语句 </span><br><span class="line">-g + 的内存：跳转到该内存所对应的语句（再用t命令执行该条命令） </span><br><span class="line">-r命令：查看寄存器的内容（后可直接接寄存器的名称，就只查看该寄存器的内容） </span><br><span class="line">-d命令：后接内存地址，查看改地址后面8 * 16个字节空间的地址（每行16个字节，共8行）后面是对应的字符‘.’表示没有该数字对应的字符 </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Liquid2019/something&quot;&gt;masm5和dosbox&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="==" scheme="https://liquid2019.github.io/tags/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://liquid2019.github.io/2020/12/12/test/"/>
    <id>https://liquid2019.github.io/2020/12/12/test/</id>
    <published>2020-12-12T12:42:42.000Z</published>
    <updated>2021-03-01T07:59:09.795Z</updated>
    
    <content type="html"><![CDATA[<p>test test test</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;test test test&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="test" scheme="https://liquid2019.github.io/tags/test/"/>
    
  </entry>
  
</feed>
